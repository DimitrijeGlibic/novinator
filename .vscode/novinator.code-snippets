{
	// Place your novinator workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React Functional Component": {
		"prefix": "rfc",
		"body": [
			"import React from \"react\"",
			"",
			"const $TM_FILENAME_BASE = () => {",
			"  return (",
			"    <div>",
			"      $2",
			"    </div>",
			"  )",
			"};",
			"",
			"export default $TM_FILENAME_BASE;",
			""
		],
		"description": "React Functional Component"
	},
	"Styled Component": {
		"prefix": "sc",
		"body": [
			
			"const Styled$1 = styled.div`",
			"`;",
			""
		],
		"description": "Styled component from HTML element"
	},
	"Styled Component with Lifcycle": {
		"prefix": "scc",
		"body": [
			
			"const Styled$1 = styled.($1)`",
			"`;",
			""
		],
		"description": "Styled component from React Component"
	},
	"useState": {
		"prefix": "use",
		"body": [
			"const [$1, set$1] = useState(null);"
		],
		"description": "useState hook"
	}
}
